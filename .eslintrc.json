{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "sourceType": "module",
    "ecmaVersion": 2020,
    "ecmaFeatures": {
      "jsx": true
    }
  },
  // Limit TypeScript linting to TS/TSX
  // https://github.com/typescript-eslint/typescript-eslint/issues/1928
  "overrides": [
    {
      "files": [
        "src/**/*.{ts,tsx}"
      ],
      "extends": [
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking"
      ],
      "rules": {
        "@typescript-eslint/ban-ts-comment": "off",
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/explicit-module-boundary-types": "off",
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-explicit-any": [
          "error",
          {
            "fixToUnknown": true,
            "ignoreRestArgs": false
          }
        ],
        "@typescript-eslint/no-floating-promises": [
          "error",
          {
            "ignoreIIFE": true
          }
        ],
        "@typescript-eslint/no-unused-vars": "off",
        "@typescript-eslint/no-unnecessary-condition": [
          "error",
          {
            "allowConstantLoopConditions": true
          }
        ],
        "@typescript-eslint/no-unnecessary-type-arguments": "error",
        "@typescript-eslint/prefer-nullish-coalescing": "error",
        "@typescript-eslint/prefer-optional-chain": "error"
      },
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "tsconfigRootDir": "./",
        "project": "./tsconfig.json"
      }
    }
  ],
  "env": {
    "es6": true,
    "browser": true,
    "node": true
  },
  "plugins": [
    "react"
  ],
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended"
  ],
  "settings": {
    "react": {
      "pragma": "h",
      "createClass": ""
    }
  },
  "rules": {
    "block-spacing": "error",
    "comma-dangle": [
      "error",
      {
        "arrays": "always-multiline",
        "exports": "never",
        "functions": "never",
        "imports": "never",
        "objects": "always-multiline"
      }
    ],
    "comma-spacing": "error",
    "default-param-last": "error",
    "eol-last": [
      "error",
      "always"
    ],
    "eqeqeq": "error",
    "indent": [
      "error",
      2,
      {
        "SwitchCase": 1
      }
    ],
    "key-spacing": [
      "error",
      {
        "mode": "minimum"
      }
    ],
    "keyword-spacing": "error",
    "multiline-ternary": [
      "error",
      "always-multiline"
    ],
    "no-console": "off",
    "no-fallthrough": "error",
    "no-implicit-coercion": "error",
    "no-invalid-this": "error",
    "no-multi-spaces": [
      "error",
      {
        "exceptions": {
          "Property": true,
          "TSTypeAnnotation": true
        },
        "ignoreEOLComments": true
      }
    ],
    "no-tabs": "error",
    "no-trailing-spaces": "error",
    // Switch this as needed, otherwise too much noise
    "no-unused-vars": "off",
    "no-useless-concat": "error",
    "object-curly-spacing": [
      "error",
      "always"
    ],
    "operator-linebreak": [
      "error",
      "before"
    ],
    "prefer-destructuring": "error",
    "prefer-template": "error",
    "quote-props": [
      "error",
      "consistent-as-needed"
    ],
    "quotes": [
      "error",
      "single"
    ],
    "react/jsx-closing-bracket-location": [
      "error",
      "after-props"
    ],
    "react/jsx-closing-tag-location": "error",
    "react/jsx-curly-brace-presence": [
      "error",
      {
        "children": "never",
        "props": "never"
      }
    ],
    "react/jsx-equals-spacing": "error",
    "react/jsx-indent": [
      "error",
      2
    ],
    "react/jsx-indent-props": [
      "error",
      2
    ],
    "react/jsx-no-undef": "error",
    "react/jsx-tag-spacing": [
      "error",
      {
        "closingSlash": "never",
        "beforeSelfClosing": "never",
        "afterOpening": "never",
        "beforeClosing": "never"
      }
    ],
    "react/jsx-uses-react": "error",
    "react/jsx-uses-vars": "error",
    "react/no-adjacent-inline-elements": "error",
    "react/react-in-jsx-scope": "error",
    "react/self-closing-comp": "error",
    "react/void-dom-elements-no-children": "error",
    "semi": [
      "error",
      "always"
    ],
    "semi-spacing": "error",
    "space-before-blocks": "error",
    "space-in-parens": "error",
    "space-infix-ops": "error",
    "template-curly-spacing": "error",
    "template-tag-spacing": "error"
  }
}
